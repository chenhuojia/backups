<?php
namespace Book\Controller;

use Think\Controller;
use User\Util\Util;

class BookController extends Controller
{   
    
    /**
     * 图书类型第一栏目
     */
    public function categoryOne()
    {
        $orderlist = array(
            'sorts' => 'desc'
        );
        $data = M('category')->where(array(
            'is_show' => 1,
            'level' => 0
        ))
            ->field('cg_id,name')
            ->order($orderlist)
            ->select();
        if ($data)
            $this->myApiPrint(200, 'success', $data);
        else 
            if (empty($data))
                $this->myApiPrint(202, '暂无数据');
            else
                $this->myApiPrint(300, '系统繁忙，请稍后再试');
    }


    /**
     * 图书类型第二三栏目
     */
    public function categoryTwo()
    {
        $cg_id = I('get.cg_id', 0) . '|%';
        $data = M('category')->where("path like '$cg_id' AND is_show=1")
            ->field('cg_id,level,name,path,sorts')
            ->select();
       $re=array();
        foreach ($data as $key => &$v) { // 快速排序
            if ($v['level']== 1) {
                $re[]= $v;
                unset($data[$key]);
                continue;
            }
                unset($v['level']);
        }
       foreach($data as $v){
           foreach ($re as &$vv){
              if(strpos($v['path'],$vv['path'])===0){
                $vv['third'][]=$v;
              }
           }
       }
            if (empty($re))
                $this->myApiPrint(300, '');
            else
                $this->myApiPrint(200, '获取成功',$re);
    }
    /**
     * 获取某一图书类型值并找到其父节点
     */
    public function typeFind()
    {   
       $cg_id = I('get.cg_id',0);
       $Tag=D('Category','Logic');
       $data= $Tag->getOne(array('is_show'=>1,'cg_id'=>$cg_id));
       if($data['f_id']>0)  $data['second']= $Tag->getOne(array('is_show'=>1,'cg_id'=>$data['f_id']));
       if($data['second']>0)  $data['third']= $Tag->getOne(array('is_show'=>1,'cg_id'=>$data['second']['f_id']));
       if ($data) $this->myApiPrint(200,'success',$data);
       else if(empty($data)) $this->myApiPrint(202,'暂无数据');
       else  $this->myApiPrint(300,'');
    }

    //图书搜索
    public function searchBook1()
    {     
         
        $skip = I('post.skip',0);
        $take = I('post.take',10);
        $search = I('post.search',"");
        $cg_id = I('post.cg_id',0);
        $type = I('post.type',-1);
        $rule = I('post.rule',array(3,3,3));
        $pirce = I('post.pirce','');
        $public = I('post.public','');
        $applicable_age = I('post.applicable_age','');
        $author_area = I('post.author_area','');
        $sql ="";
        $order = "";
        //if($cg_id>0) $sql=$sql."g.cg_id=".$cg_id." and ";
        if($cg_id>0) $sql=$sql."FIND_IN_SET($cg_id, b.category_path)"." and ";
        if(!empty($search)){ 
             if($search[0]=="press") $sql=$sql."r.press like "."'%$search[1]%'"." and ";
             elseif($search[0]=="name") $sql=$sql."b.name like "."'%$search[1]%'"." and ";
             elseif($search[0]=="author") $sql=$sql."b.author like "."'%$search[1]%'"." and ";
             else  $this->myApiPrint(300,'参数错误');
        }
        if(!empty($pirce)) $sql=$sql."b.price >=".$pirce[0]." and b.price <=".$pirce[1]." and ";
        if(!empty($public)) $sql=$sql."r.publish_time >=".$public[0]." and r.publish_time <= ".$public[1]." and ";
        if(!empty($applicable_age)) $sql=$sql."r.applicable_age in".implode(',',$applicable_age)." and ";
        if(!empty($author_area)) $sql=$sql."r.author_area in".implode(',',$author_area)." and ";
        if($type>-1) $sql=$sql."b.type=".$type." and ";
        $sql=$sql."b.isdelete=0";
        if($rule[0]==1) $order=$order."b.price desc, ";
        if($rule[0]==2) $order=$order."b.price asc, ";
        if($rule[1]==1) $order=$order."k.comment_num desc, ";
        if($rule[1]==2) $order=$order."k.comment_num asc, ";
        if($rule[2]==1) $order=$order."k.sell_num desc, ";
        if($rule[2]==2) $order=$order."k.sell_num asc, ";
        $order=$order."b.book_id desc";
        $data=$this->searchAll($sql,$order,$skip,$take);
        if ($data) $this->myApiPrint(200,'success',$data);
        else if(empty($data)) $this->myApiPrint(202,'暂无数据');
        else  $this->myApiPrint(300,'系统繁忙，请稍后再试');
    }


    //图书搜索
    public function searchBook()
    {     
         
        $skip = I('post.skip',0);
        $take = I('post.take',10);
        $search = json_decode($_POST['search'],true);
        $cg_id = I('post.cg_id',0);
        $type = I('post.type',-1);
        $rule = json_decode($_POST['rule'],true);
        $pirce = json_decode($_POST['pirce'],true);
        $public = json_decode($_POST['public'],true);
        $applicable_age = json_decode($_POST['applicable_age'],true);
        $author_area = json_decode($_POST['author_area'],true);
        $sql ="";
        $order = "";
        if($cg_id>0) $sql=$sql."b.category_path like "."'$cg_id|%'"." or b.category_path like "."'%|$cg_id'"." or b.category_path like "."'%|$cg_id|%'"." or b.category_path = $cg_id"." and ";
        if(!empty($search)){ 
             if($search[0]=="press") $sql=$sql."r.press like "."'%$search[1]%'"." and ";
             elseif($search[0]=="name") $sql=$sql."b.name like "."'%$search[1]%'"." and ";
             elseif($search[0]=="author") $sql=$sql."b.author like "."'%$search[1]%'"." and ";
             else  $this->myApiPrint(300,'参数错误');
        }
        if(!empty($pirce)) $sql=$sql."b.price >=".$pirce[0]." and b.price <=".$pirce[1]." and ";
        if(!empty($public)) $sql=$sql."r.publish_time >=".$public[0]." and r.publish_time <= ".$public[1]." and ";
        if(!empty($applicable_age)) $sql=$sql."r.applicable_age in (".implode(',',$applicable_age).") and ";
        if(!empty($author_area)) $sql=$sql."r.author_area in (".implode(',',$applicable_age).") and ";
        if($type>-1) $sql=$sql."b.type=".$type." and ";
        $sql=$sql."b.isdelete=0";
        if($rule[0]==1) $order=$order."b.price desc, ";
        if($rule[0]==2) $order=$order."b.price asc, ";
        if($rule[1]==1) $order=$order."k.comment_num desc, ";
        if($rule[1]==2) $order=$order."k.comment_num asc, ";
        if($rule[2]==1) $order=$order."k.sell_num desc, ";
        if($rule[2]==2) $order=$order."k.sell_num asc, ";
        $order=$order."b.book_id desc";
        $data=$this->searchAll($sql,$order,$skip,$take);
        if ($data) $this->myApiPrint(200,'success',$data);
        else if(empty($data)) $this->myApiPrint(202,'暂无数据');
        else  $this->myApiPrint(300,'系统繁忙，请稍后再试');
    }

   public function searchAll($sql,$order,$skip,$take)
    {   
        $data=M('book')
        ->alias('b')
        ->join('LEFT JOIN kts_book_attr as r ON r.book_id = b.book_id')
        ->join('LEFT JOIN kts_book_add as k ON k.book_number = b.book_number')
        ->where($sql)
        ->field('b.book_id,b.shop_id,b.user_id,b.type,b.name,b.author,b.price,b.cover_img,r.press,r.introduce,b.book_number')
        ->limit($skip,$take)
        ->order($order)
        ->group('b.book_id')
        ->select();
        foreach ($data as $k => $v) {
            $data[$k]['cover_img'] = C("QINIU_IMG_PATH").$v['cover_img'];
            $data[$k]['comment_sum'] = 0;
            $data[$k]['new_degree'] = "";
            $data[$k]['size'] = "";
            $data[$k]['shop_name'] = "";
            $user=getUserAvater($v['user_id']);
            $data[$k]['user_avatar'] =$user['avatar'];           
            $data[$k]['shop_logo'] = "";           
            $data[$k]['user_name'] = "";
            $data[$k]['comment_rate'] = '98.3';
            $data[$k]['kind']=M("book")->where('book_number='.$v['book_number'])->getField('type',true);
            $data[$k]['kind']=array_merge(array_unique($data[$k]['kind']));
            if($v['type']==0){
                 $old =M("book_old")->field('description,user_name')->where('book_id='.$v['book_id'])->find();
                 $data[$k]['new_degree'] = $old['description'];
                 $data[$k]['user_name'] = $user['name'];
            }
            if($v['type']==1){
                 $shop=M('shop')->field('shop_name,shop_logo')->where(array('shop_id'=>$v['shop_id']))->find();
                 $data[$k]['shop_name'] = $shop['shop_name'];
                 $data[$k]['shop_logo'] = \User\Util\Util:: getShopLogoUrl($v['shop_id'],C('SHOP_PATH'),C('WEB_PATH'));
                 $data[$k]['comment_sum'] = M("book_comment")->where('book_id='.$v['book_id'])->count('comment_id');
            }
            if($v['type']==2){
                 $data[$k]['user_name'] = $user['name'];
            }
            if($v['type']==3){
                 $data[$k]['size'] = M("book_ebook")->where('book_id='.$v['book_id'])->getField('size');
            }
        }
        return $data;
    }

     //根据类别搜索图书
    public function bookTypeList()
    {
       $skip = I('post.skip',0);
       $take = I('post.take',10);
       $type = I('post.type',1);
       $search = I('post.search',"");
       if(empty($search)) $this->myApiPrint(300,'参数错误');
       $data=M('book')
        ->alias('b')
        ->join('LEFT JOIN kts_book_attr as r ON r.book_id = b.book_id')
        ->where(array('b.type'=>$type,'b.isdelete'=>0,'b.book_number'=>$search))
        ->field('b.book_id,b.shop_id,b.user_id,b.type,b.name,b.author,b.price,b.cover_img,r.press,r.introduce,book_number')
        ->limit($skip,$take)
        ->group('b.book_id')
        ->select();
       foreach ($data as $k => $v) {
            $data[$k]['cover_img'] = C("QINIU_IMG_PATH").$v['cover_img'];
            $data[$k]['comment_sum'] = 0;
            $data[$k]['new_degree'] = "";
            $data[$k]['size'] = "";
            $data[$k]['shop_name'] = "";
            $user=getUserAvater($v['user_id']);
            $data[$k]['user_avatar'] =$user['avatar'];
            $data[$k]['user_name'] = "";
            $data[$k]['comment_rate'] = '98.3';
            $data[$k]['kind']=M("book")->where('book_number='.$v['book_number'])->getField('type',true);
            $data[$k]['kind']=array_merge(array_unique($data[$k]['kind']));
            if($v['type']==0){
                 $old =M("book_old")->field('description,user_name')->where('book_id='.$v['book_id'])->find();
                 $data[$k]['new_degree'] = $old['description'];
                 $data[$k]['user_name'] = $user['name'];
            }
            if($v['type']==1){
                 $data[$k]['shop_name'] = M("shop")->where(array('shop_id'=>$v['shop_id']))->getField('shop_name');
                 $data[$k]['comment_sum'] = M("book_comment")->where('book_id='.$v['book_id'])->count('comment_id');
            }
            if($v['type']==2){
                 $data[$k]['user_name'] = $user['name'];
            }
            if($v['type']==3){
                 $data[$k]['size'] = M("book_ebook")->where('book_id='.$v['book_id'])->getField('size');
            }
        }
       if ($data) $this->myApiPrint(200,'success',$data);
       else if(empty($data)) $this->myApiPrint(202,'暂无数据');
       else  $this->myApiPrint(300,'系统繁忙，请稍后再试');
    }

     /**
     * 搜索
     */
    public function searchBooks(){
          $search=I('post.search','');
          $skip = I('post.skip',0);
          $take = I('post.take',10);
          $sql="b.isdelete=0";
          if($search!="") $sql=$sql."and b.name like "."'%$search%'";
          $data=M('book')
            ->alias('b')
            ->where("b.isdelete=0")
            ->field('b.book_id,b.type,b.name,b.author,b.cover_img')
            ->limit($skip,$take)
            ->group('b.book_id')
            ->select();
          foreach ($data as $k => $v) {
              $data[$k]['cover_img'] = C("QINIU_IMG_PATH").$v['cover_img'];
          }
         if ($data) $this->myApiPrint(200,'success',$data);
         else if(empty($data)) $this->myApiPrint(202,'暂无数据');
         else  $this->myApiPrint(300,'系统繁忙，请稍后再试',300);
    }

    /**
     * 扫一扫ISBN
     */
    public function saomiao(){
            $book_number=I('post.book_number');
            $type=I('post.type',2);
            $skip = I('post.skip',0);
            $take = I('post.take',10);
            if(empty($book_number)) $this->myApiPrint(300,'参数错误');
            $data=M('book')
              ->alias('b')
              ->join('LEFT JOIN kts_book_attr as r ON r.book_id = b.book_id')
              ->where(array('b.type'=>$type,'b.isdelete'=>0,'b.book_number'=>$book_number))
              ->field('b.book_id,b.shop_id,b.user_id,b.type,b.name,b.author,b.price,b.cover_img,r.press,r.introduce,book_number')
              ->limit($skip,$take)
              ->group('b.book_id')
              ->select();
             foreach ($data as $k => $v) {
               $data[$k]['cover_img'] = C("QINIU_IMG_PATH").$v['cover_img'];
             }
            if ($data) $this->myApiPrint(200,'success',$data);
            else if(empty($data)) $this->myApiPrint(202,'暂无数据');
            else  $this->myApiPrint(300,'系统繁忙，请稍后再试',300); 
    }
    
    public function saomiaoshare($book_number,$skip,$take){           
          $book=M('book_share')->alias('o')
                      ->join('left join kts_book b on b.book_id = o.book_id')
                      ->join('left join kts_user u on u.user_id = o.user_id')
                      ->field('o.book_id,o.user_id,b.cover_img,b.type,b.name,b.author,u.name as username')
                      ->where(array('o.book_number'=>$book_number))
                      ->group('o.user_id')
                      ->limit($skip,$take)
                      ->select();
              foreach ($book as $key => $value) {
                $book[$key]['cover_img'] = C('QINIU_IMG_PATH').$value['cover_img'];
                
                $user=getUserAvater($value['user_id']);
                $book[$key]['user_avatar'] = $user['avatar'];
                $book[$key]['user_name'] =$user['name'];
              }
           return $book;   
    }

    public function saomiaoOld($book_number,$skip,$take){
           $book=M('book_old')->alias('o')
                  ->join('left join kts_book b on b.book_id = o.book_id')
                  ->field('b.book_id,b.user_id,b.type,b.name,b.author,b.price,o.description,b.cover_img')
                  ->where(array('o.book_number'=>$book_number))
                  ->group('o.book_id')
                  ->limit($skip,$take)
                  ->select();
              foreach ($book as $key => $value) {
                $book[$key]['cover_img'] = C('QINIU_IMG_PATH').$value['cover_img'];
                $user=getUserAvater($value['user_id']);
                $book[$key]['user_avatar'] = $user['avatar'];
                $book[$key]['user_name'] =$user['name'];
              }
           return $book;
    }
    public function saomiaonew($book_number,$skip,$take){
            $book=M('book')->alias('o')
                    ->join('left join kts_book b on b.book_id = o.book_id')
                    ->field('b.book_id,b.cover_img,b.type,b.name,b.author,b.price')
                    ->where(array('o.book_number'=>$book_number))
                    //TODO:分页呢
                    ->limit($skip,$take)
                    ->select();
            foreach ($book as $k=> $v){
                $book[$k]['good']='98.3%';
                $book[$k]['cover_img'] = C('QINIU_IMG_PATH').$v['cover_img'];
                import('User/Util/Util');
                $book[$k]['user_avatar'] = getUserAvater($v['user_id'])['avatar'];
                //TODO:循坏查询
                $data[$key]['comment']=round(M('book_comment')->where(array('book_id'=>$value['book_id']))->count('comment_id'));
            }
            return  $book;
    }
    
    
    public function getAplicablAge(){
        $data=M('book_aplic_age')->where('is_show=1')->order(array('sort'=>'desc','addtime'=>'desc'))->select();
        $this->myApiPrint(200,'success',$data);
    }
    
    /**
     * 书籍
     * **/
    public function BookDet(){
        $book_id=I('post.book_id');
        $book=D('Book','Logic');
        $data=$book->getBookDet($book_id);
        if ($data){
            $book->changeBookLikes($book_id);           
            $this->myApiPrint(200,'success',$data);
        }        
    }
    
    
    /**
     *评论列表 
     ***/
    public function BooKDiscuss(){
        $book_id=I('post.book_id');
        $skip=I('post.skip',0);
        $take=I('post.take',10);
        $books=D('Book','Logic');
        //TODO:通过查找
        $book=M('book')->where(array('book_id'=>$book_id,'isdelete'=>0))->find();
        $data=$books->getBookDiscuss($book_id,$skip,$take);
        if($data)  $this->myApiPrint(200,'success',$data);
        $this->myApiPrint(202,'暂无数据');
    }
    
    /**
     *评论详情
     ***/
    public function BooKDiscussDet(){
        $comment_id=I('post.comment_id');
        $skip=I('post.skip',0);
        $take=I('post.take',10);
        $books=D('Book','Logic');
        $data=$books->getBookDiscussDet($comment_id,$skip,$take);
        if($data)  $this->myApiPrint(200,'success',$data);
        $this->myApiPrint(202,'暂无数据');
    }
    
    /**
     *详情
     ***/
    public function BooKDesc(){
        $book_id=I('post.book_id');
        $data=M('book')->alias('b')
        ->join('left join kts_catalog c on b.book_id = c.book_id')
        ->join('left join kts_book_attr attr on b.book_id = attr.book_id')
        ->join('left join kts_country cou on attr.author_area = cou.country_id')
        ->field('b.book_id,b.book_number,b.name as book_name,b.author,cou.name_chinese as country,attr.press,attr.publish_time,
            attr.publish_price,attr.edition,attr.impression,attr.page,attr.words,attr.format,attr.paper,attr.binding,
            attr.language,attr.author_desc,attr.introduce,c.description as catalog,attr.video_title,attr.video')
        ->where(array('b.book_id'=>$book_id))->find();
        if ($data['video'] && $data['video_title']){
            $video=explode(';',$data['video']);
            foreach ($video as $k=>$v){
                $video[$k]=C('QINIU_IMG_PATH').$v;
            }
            $data['video_cover']=$video[0];
            $data['video']=$video[1];
        }else{
            $data['video_cover']="";
            $data['video']="";
        }     
        $this->myApiPrint(200,'success',$data);
    }

     public function nearByBookShelf()
    {
        $latitude =I('post.latitude','23.115262');
        $longitude = I('post.longitude','113.410505');
        $skip = I('post.skip',0);
        $take = I('post.take',10);
        $type = I('post.type',2);
        $squares=self::getnearBy($longitude,$latitude);
        $data=M('bookshelf')->alias('b')
            ->field('b.shelf_id,b.user_id,b.addr,b.longitude,b.longitude,b.latitude,b.book_sums,b.type')
            ->where("b.latitude<>0 and b.latitude>{$squares['right-bottom']['lat']} and b.latitude<{$squares['left-top']['lat']} and b.longitude>{$squares['left-top']['lng']} and b.longitude<{$squares['right-bottom']['lng']} and b.type=$type")
             ->order("(($longitude - b.longitude)*($longitude - b.longitude) + ($latitude - b.latitude) * ($latitude - b.latitude))", 'ASC')
            ->group('b.longitude,b.latitude')
            ->limit($skip,$take)
            ->select();
        foreach ($data as $key => $value) {
            $data1=M('bookshelf')->alias('b')
                ->field('b.user_id')
                ->where(array('latitude'=>$value['latitude'],'longitude'=>$value['longitude'],'type'=>$type))
                ->limit(5)
                ->group('b.user_id')
                ->select();
            foreach ($data1 as $k => $v) {
                    $userMes = \User\Util\Util::GetUserAvatrAndNick($v['user_id']);
                    $data[$key]['info']['avatar_arr'][$k] =$userMes['avatar'];
                }
            $data[$key]['info']['sums'] =count($data1);
        }
        if($data)  $this->myApiPrint(200,'success',$data);
        $this->myApiPrint(202,'暂无数据');

    }

    public function nearByBookShelfUser()
    {
        $latitude =I('post.latitude','23.115262');
        $longitude = I('post.longitude','113.410505');
        $skip = I('post.skip',0);
        $take = I('post.take',10);
        $type = I('post.type',2);
        $squares=self::getnearBy($longitude,$latitude);
        $data=M('bookshelf')->alias('b')
            ->field('b.shelf_id,b.user_id,b.addr,b.longitude,b.longitude,b.latitude')
            ->where("b.latitude<>0 and b.latitude>{$squares['right-bottom']['lat']} and b.latitude<{$squares['left-top']['lat']} and b.longitude>{$squares['left-top']['lng']} and b.longitude<{$squares['right-bottom']['lng']}")
             ->order("(($longitude - b.longitude)*($longitude - b.longitude) + ($latitude - b.latitude) * ($latitude - b.latitude))", 'ASC')
            ->limit($skip,$take)
            ->group('b.user_id')
            ->select();
        foreach ($data as $key => $value) {
            $userMes = \User\Util\Util::GetUserAvatrAndNick($value['user_id']);
            $data[$key]['user_name'] = $userMes['name'];
            $data[$key]['user_avatar'] = $userMes['avatar'];
        }
        if($data)  $this->myApiPrint(200,'success',$data);
        $this->myApiPrint(202,'暂无数据');
    }

    public function addrBookShelfUser()
    {
        $latitude =I('post.latitude','23.115262');
        $longitude = I('post.longitude','113.410505');
        $skip = I('post.skip',0);
        $take = I('post.take',10);
        $type = I('post.type',2);
        $data=M('bookshelf')->alias('b')
            ->field('b.shelf_id,b.user_id,b.addr,b.longitude,b.longitude,b.latitude,book_sums,type')
            ->where(array('latitude'=>$latitude,'longitude'=>$longitude,'type'=>$type))
            ->order('shelf_id')
            ->limit($skip,$take)
            ->group('b.user_id')
            ->select();
        foreach ($data as $key => $value) {
            $userMes = \User\Util\Util::GetUserAvatrAndNick($value['user_id']);
            $data[$key]['user_name'] = $userMes['name'];
            $data[$key]['user_avatar'] = $userMes['avatar'];
        }
        if($data)  $this->myApiPrint(200,'success',$data);
        $this->myApiPrint(202,'暂无数据');
    }

    public function addrBookShelfUserPic()
    {
        $latitude =I('post.latitude','23.115262');
        $longitude = I('post.longitude','113.410505');
        $skip = I('post.skip',0);
        $take = I('post.take',10);
        $type = I('post.type',2);
        $squares=self::getnearBy($longitude,$latitude);
        $data=M('bookshelf')->alias('b')
            ->field('b.user_id,b.addr')
            ->where(array('latitude'=>$latitude,'longitude'=>$longitude,'type'=>$type))
            ->order('shelf_id')
            ->limit($skip,$take)
            ->group('b.user_id')
            ->select();
        $data2 =array();
        if($data){
            foreach ($data as $key => $value) {
                $userMes = \User\Util\Util::GetUserAvatrAndNick($value['user_id']);
                $data2['user_avatar'][$key] =$userMes['avatar'];
            }
            $data2['addr'] =$data[0]['addr'];
            $data2['sums'] =count($data);
            $this->myApiPrint(200,'success',$data2);
        }else{
            $this->myApiPrint(202,'暂无数据');
        }
    }


     public function getnearBy($lng,$lat){
         $distance = 1;//范围（单位千米）
         // $lat = '113.873643';
         // $lng = '22.573969';
         define('EARTH_RADIUS', 6371);//地球半径，平均半径为6371km
         $dlng = 2 * asin(sin($distance / (2 * EARTH_RADIUS)) / cos(deg2rad($lat)));
         $dlng = rad2deg($dlng);
         $dlat = $distance/EARTH_RADIUS;
         $dlat = rad2deg($dlat);
         $squares = array('left-top'=>array('lat'=>$lat + $dlat,'lng'=>$lng-$dlng),
         'right-top'=>array('lat'=>$lat + $dlat, 'lng'=>$lng + $dlng),
         'left-bottom'=>array('lat'=>$lat - $dlat, 'lng'=>$lng - $dlng),
         'right-bottom'=>array('lat'=>$lat - $dlat, 'lng'=>$lng + $dlng)
         );
         return $squares;
    }

     /**
      *某一书架上的书列表
      * **/       
     public function bookshelfBookList(){
         $shelf_id = I('get.shelf_id',0);
         $skip=I('get.skip',0);
         $take=I('get.take',10);
         $type = I('get.type',2);
         $data=M('bookshelf_book')
              ->field('id,user_id,book_id,shelf_id,type,book_name,author,cover_img,addtime,press,price as publish_price')
              ->where(array('shelf_id'=>$shelf_id))
              ->order(array('id'=>'desc'))
              ->limit($skip,$take)
              ->select();
        foreach ($data as $k=>$v){
             $userMes = \User\Util\Util::GetUserAvatrAndNick($v['user_id']);
             $data[$k]['user_name'] = $userMes['name'];
             $data[$k]['user_avatar'] = $userMes['avatar'];
             $data[$k]['cover_img'] = C('QINIU_IMG_PATH').$data[$k]['cover_img'];
        }
        if ($data) $this->myApiPrint(200,'success',$data);
        else if(empty($data)) $this->myApiPrint(202,'暂无数据');
        else  $this->myApiPrint(300,'系统繁忙，请稍后再试',300);
         
     }

    
    /**
     * 查看编辑图书
     * ***/
    public function editBook(){
        $book_id=I('post.book_id');
        $book=M('book')->alias('b')
        ->join('left join kts_book_attr as a on b.book_id = a.book_id')       
        ->where(array('b.book_id'=>$book_id))
        ->field('b.book_id,b.name as book_name,b.type,b.author,a.press,a.publish_time,b.book_number,a.publish_price,b.price,b.category_path as cate_id,b.cover_img,
                  a.author_area,a.format,a.edition,a.impression,a.page,a.words,a.language,a.binding,a.paper,
                  a.introduce,a.author_desc,a.catalog,a.applicable_age,a.video_title,a.video,a.address,a.longitude,a.latitude,a.copyright,a.other,a.cate_name')
        ->find();
        if ($book){ 
            $url=C('QINIU_IMG_PATH');
            $tmp=M('book_old')->where(array('book_id'=>$book_id))->field('description,shipping_price')->find();
            if (empty($tmp)){
                $book['extent']='';
                $book['shipping_price']='';
            }else{
                $book['extent']=$tmp['description'];
                $book['shipping_price']=$tmp['shipping_price'];
            }
           if(empty($cate_name=$book['cate_name'])){               
                $book['cate_name']=array();
                $book['cate_path']=array();
            }else{
                $cate_name=explode('&&',$book['cate_name']);
                $book['cate_name']=explode(',',$cate_name[0]);
                $book['cate_path']=explode(',',$cate_name[1]);
            } 
            $book['cover_img']=$url.$book['cover_img'];
            $book['copyright']=$book['copyright']?$url.$book['copyright']:'';
            $book['publish_time']=date('Y-m-d',$book['publish_time']);
            $other=$book['other'];
            if (!empty($other)){
                $other=explode(';',$other);
                foreach ($other as $k=>$v){
                    $other[$k]=$url.$v;
                }
                $book['other']=$other;
            }else{
                $book['other']=array();
            } 
            if ($book['video']){
                $video=explode(';',$book['video']);
                $videos['video_cover']=$url.$video[0];
                $videos['video']=$url.$video[1];
                $book['video']=$videos;
            }
            $this->myApiPrint(200,'success',$book);
        }
        $this->myApiPrint(300,'fail');
    }

    
}

